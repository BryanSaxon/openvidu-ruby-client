c
response
c
response
c
response
c
response
c
response
resposne
c
create_params
c
create_params
c
create_params
c
create_params
c
create_params
c
instance_variables_hash
c
instance_variables_hash
c
instance_variables_hash
c
Hash[instance_variables.map { |name| [name[1..-1], instance_variable_get(name)] } ]
Hash[instance_variables.map { |name| [name.slice(0), instance_variable_get(name)] } ]
Hash[instance_variables.map { |name| [name.slice!(0), instance_variable_get(name)] } ]
Hash[instance_variables.map { |name| [name, instance_variable_get(name)] } ]
instance_variables
c
customSessionId
c
params
c
@sessionId
c
params
c
@mediaMode
sessionId
body
c
@customSessionId
@sessionId
c
@sessionId
instance_variables
c
params
customSessionId
sessionId
ls
@sessionId
instance_variable_get(:@sessionId.to_s)
instance_variable_get(:@sessionId)
instance_variables
self.class.instance_variables
c
response
c
response
c
options[:body]
options
c
response
c
response
c
body
@params
params
c
body
@params
c
@params
body
c
@params
params
c
params
body
c
response
c
response
c
body
c
response
c
response
c
response
c
response
resposne
c
params
c
response
c
params
c
response
resopnse
c
response
c
response
c
response
c
response
resposne
c
response
c
response
c
response
resopnse
c
object.transform_keys { |key| key.to_s.underscore }
object
c
object
c
response
c
object.class
object
c
response
c
response
c
response
c
response.success?
response.methods
response.methodw
response
response.error
response.errors
response.internal_server_error?
response.bad_request?
response.unprocessable_entity?
response.code
response.methods
response
respnose
response.status
response.headers
resopsne.headers
response
resposne
response.status
response.parsed_response
resopnse.parsed_body
response
c
response
c
response
c
response
c
response
c
response
c
response.parsed_response
response.parsed_body
response
resposne
